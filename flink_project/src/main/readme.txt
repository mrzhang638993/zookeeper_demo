Flink是第四代的大数据开发框架和实现的。
Flink的理论引入操作实现：hadoop-->strom---->spark(内存计算的先河)----->flink
计算引擎：mapreduce（mapper阶段以及reduce阶段的，基于磁盘的，计算特别的慢）
--------->TAG+mapreduce(可以reduce之家过度到reduce阶段的，性能相较于mapper阶段存在很大的性能提升操作和实现)------->spark(基于内存进行计算的框架,批处理和流处理（在小批次的基础上执行的，有sql支持操作的，存在有向无环图的理解的）)---------->flink（批处理，流式处理，认为批是流的特例而已，简化开发，sql的api支持）。
Flink：分布式计算引擎。支持对于历史数据的批处理操作，实时的流数据的处理操作，支持基于事件的处理。
spark以及flink对应的都是基于hadoop的yarn上的，运行的性能是flink>spark>mapreduce.flink的性能优越的目标是增量的，快的原因在于flink对生成数据的优化的。
2014成为apache的开源项目的。
spark是认为所有的操作是批处理操作的，流对应的是微批次的操作的。flink对应的是流式操作的，所以的操作都是流式处理的。
阿里的实时计算对应的都是基于flink搭建的。
阿里基于flink进行优化，创建了blink代码进行操作的。blink在flink的基础上进行了进行了大量的优化扩展和操作实现的。flink的基础上开发啦blink的代码结构操作的。阿里的大数据是基于blink的基础上开发操作的。
yarn session:启动一个yarn session进程。一直处于运行状态，适合小任务的大量执行操作的。
flink内存调优布局和分配操作:启动flink的yarn session 出现异常。
yarn session模拟了jobmanager以及taskmanager的模式的。
flink的yarn session模式的话，任务是一直在运行中的，适用于小作业比较多的情况的。
分离模式下面，任务完成之后session关闭的，不用手动关闭的。适合于大任务的操作的。


spark  streaming对应的是微批次的模式来处理流式数据的。对应的spark还是批次任务的。flink可以执行流处理任务和批处理任务都是可以执行的。
低延迟：对应的要求处理的速度要快。
高吞吐量：对应的是处理的数据量要求要更加的高的。
flink处理流式和批次的操作是设置缓存块的大小的，缓存块的大小可以设置为0到无穷大的。通过调整缓存块的大小，灵活的可以调整低延迟和吞吐量的要求的。

ETL:在存储系统之间进行数据转换和迁移操作的常用方法和实现。常见的操作是从事务性的数据库转移到分析性的数据库的。
flink的单节点模式和ha模式的区别在于：集群的taskmanager的高可用的特性设计和操作的。
