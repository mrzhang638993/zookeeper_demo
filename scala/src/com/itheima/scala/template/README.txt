#样例类的管理。样例类类似于java中的pojo的。用于保存数据的。

# 样例类默认的包含以下的方法的：
1.apply方法
2.toString方法
3.equals方法
4.hashCode方法
5.copy方法

样例类：编译器会自动的生成apply方法的。
编译器会自动重写来了toString的方法的（显示：类名(字段值1,字段值2)）。
equals方法比较两个对象的，可以直接使用==来比较两个对象是否相等的。


java中的clone对应的是浅拷贝的操作的，拷贝的是值的操作的。需要深度的克隆的话，需要下面的方式实现操作的。
在Java语言中，如果需要实现深克隆，可以通过覆盖Object类的clone()方法实现，也可以通过序列化(Serialization)等方式来实现。
（如果引用类型里面还包含很多引用类型，或者内层引用类型的类里面又包含引用类型，使用clone方法就会很麻烦。这时我们可以用序列化的方式来实现对象的深克隆。）
实现对象克隆有两种方式：
  1). 实现Cloneable接口并重写Object类中的clone()方法；
  2). 实现Serializable接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆
java深度克隆的理论基础：

scala中的对象在创建完成之前是不能执行任何的操作的。object对象是单例模式的。

#样例对象的使用场景： case  Object。样例对象是单例模式的。
1.使用来作为枚举进行操作
2.作为没有任何参数的消息进行传递






